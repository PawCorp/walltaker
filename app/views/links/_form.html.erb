<%= form_with(model: link) do |form| %>
  <% if link&.errors&.any? %>
    <div class="error">
      <ul>
        <% link.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="link--form__section">
    <h3>
      <ion-icon name="newspaper"></ion-icon>
      Metadata
    </h3>
    <p>
      Tell people about yourself! What do you like, what do you not like? Customize your link to fit you.
    </p>

    <div>
      <%= form.label :terms, 'Description (Basic HTML supported)', style: "display: block" %>
      <%= form.text_area :terms, size: '70x5' %>
    </div>

    <div class="accent-block spaced">
      <div class="accent-block__charm">
        <ion-icon role="presentation" name="trophy-sharp"></ion-icon>
        Requires the silver trophy (set >300 wallpapers for others)
      </div>

      <div data-controller="theme-form" class="link--form--theme">
        <%= form.label :custom_url, class: 'no-margin' do %>
          <ion-icon role="presentation" name="document-attach-outline"></ion-icon>
          Custom URL
          <%= form.check_box :custom_url_checkbox, disabled: current_user.set_count < 300, data: { 'theme-form-target': 'switch', action: 'click->theme-form#toggle' } %>
        <% end %>
        <div data-theme-form-target="container">
          <p class="text-light">
            In addition to your regular walltaker link URL (https://walltaker.joi.how/links/1), you can provide your own
            text for a custom url. It will be accessible as <strong>https://walltaker.joi.how/links/
            <mark>your-text-here</mark>
          </strong>
          </p>

          walltaker.joi.how/links/ <%= form.text_field :custom_url, placeholder: 'horny-deer-please', 'data-theme-form-target': 'input' %>
        </div>
      </div>
    </div>
  </div>

  <div class="link--form__section">
    <h3>
      <ion-icon name="funnel"></ion-icon>
      Restrictions
    </h3>
    <p>
      Define when and by who your wallpaper can be set using this link.
    </p>

    <div data-controller="expiry-form">
      <div class="link--form--checkbox-row">
        <%= form.label :never_expires do %>
          <ion-icon role="presentation" name="infinite"></ion-icon>
          Never expires
        <% end %>
        <%= form.check_box :never_expires, "data-expiry-form-target": "switch", "data-action": "click->expiry-form#toggle" %>
      </div>
      <div class="link--form--text-row" data-expiry-form-target="input">
        <%= form.label :expires, style: "display: block" %>
        <%= form.datetime_field :expires, class: 'flatpickr' %>
      </div>
    </div>

    <div class="link--form--checkbox-row">
      <%= form.label :friends_only do %>
        <ion-icon role="presentation" name="document-lock"></ion-icon>
        Friends Only (No public access)
      <% end %>
      <%= form.check_box :friends_only %>
    </div>

  </div>

  <div class="link--form__section">
    <h3>
      <ion-icon name="receipt"></ion-icon>
      Content
    </h3>
    <p>
      Set the scope of content that users can select for this link. Pay attention to what you enter here, these are the
      most important settings for avoiding shock content.
    </p>
    <div>
      <%= form.label :blacklist, 'Blacklist (same format as e621.net)', style: "display: block" %>
      <%= form.text_field :blacklist %>
    </div>

    <div class="link--form--min_score" data-controller="range">
      <%= form.label :min_score do %>
        <ion-icon role="presentation" name="shield-outline"></ion-icon>
        Minimum score
      <% end %>
      <%= form.range_field :min_score, min: 0, max: 300, value: link.min_score || 0, data: { 'range-target': 'input', action: 'input->range#refresh' } %>
      <output for="link_min_score" data-range-target="value"></output>
    </div>

    <div data-controller="theme-form" class="link--form--theme">
      <%= form.label :theme do %>
        <ion-icon role="presentation" name="pricetag-outline"></ion-icon>
        Theme tag
        <input type="checkbox" data-theme-form-target="switch" data-action="click->theme-form#toggle"/>
      <% end %>
      <div data-theme-form-target="container">
        <em>All wallpapers selected for this link must contain this tag. You can only use 1 theme tag. Leave it blank to
          allow all posts that are not otherwise blacklisted.</em><br/>
        <%= form.text_field :theme, placeholder: 'loimu_(character)', 'data-theme-form-target': 'input' %>
      </div>
    </div>
  </div>

  <div class="link--form--submit-row">
    <%= form.submit %>
    <%= form.submit 'Update and Test', class: 'secondary' %>
  </div>
<% end %>

<% unless link.new_record? %>
  <div class="link--form__section">
    <h3>
      <ion-icon name="sparkles"></ion-icon>
      Abilities
    </h3>
    <p>
      Some clients support special features that aren't required to be possible on every client. You can toggle those
      here, but they make break compatibility with some clients that don't support them.
    </p>

    <%= turbo_frame_tag 'link_form_abilities' do %>
      <div class="abilities">
        <div class="abilities__ability">
          <% can_show_videos = link.check_ability 'can_show_videos' %>

          <div class="abilities__ability__title">
            <strong>
              <% if can_show_videos %>
                <ion-icon name="videocam"></ion-icon>
              <% else %>
                <ion-icon name="videocam-off"></ion-icon>
              <% end %>
              <%= can_show_videos ? 'Allowing' : 'Disallowing' %> videos
            </strong>
            <p>
              <% if can_show_videos %>
                Videos and GIFs can be selected, not just images. Currently, only the Wallpaper Engine client supports videos.
              <% else %>
                Videos and GIFs cannot be selected, only images are selectable. (Default)
              <% end %>
            </p>
          </div>
          <div class="abilities__ability__controls">
            <%= button_to toggle_link_ability_link_path(ability: :can_show_videos), method: :post, class: can_show_videos ? 'enabled' : 'disabled' do %>
              <%= can_show_videos ? 'Disable videos' : 'Enable videos' %>
            <% end %>
          </div>
        </div>
        <div class="abilities__ability">
          <% can_be_set_by_porn_bot = link.check_ability 'can_be_set_by_porn_bot' %>

          <div class="abilities__ability__title">
            <strong>
              <% if can_be_set_by_porn_bot %>
                <ion-icon name="thumbs-up"></ion-icon>
              <% else %>
                <ion-icon name="hand-left"></ion-icon>
              <% end %>
              PornBotâ„¢ is <%= can_be_set_by_porn_bot ? 'welcomed' : 'turned away' %>
            </strong>
            <p>
              <% if can_be_set_by_porn_bot %>
                Your wallpaper will be changed by our resident horny robot: PornBot. They (a gender-defying icon) select
                a highly-rated post that matches your blacklist rules.
              <% else %>
                Your wallpaper will not changed by our resident horny robot: PornBot. You will only get wallpapers from
                fleshy human-beings.
              <% end %>
            </p>
          </div>
          <div class="abilities__ability__controls">
            <%= button_to toggle_link_ability_link_path(ability: :can_be_set_by_porn_bot), method: :post, class: can_be_set_by_porn_bot ? 'enabled' : 'disabled' do %>
              <%= can_be_set_by_porn_bot ? 'Disallow PornBot' : 'Allow PornBot' %>
            <% end %>
          </div>
        </div>
      </div>
    <% end %>
  </div>

  <div class="accent-block">
    <div class="accent-block__charm">
      <ion-icon role="presentation" name="information-circle"></ion-icon>
      Need help?
    </div>
    There's a concise explanation of every single one of these options on the
    <a href="<%= help_path %>#getting-started-make-a-link">help page.</a>
  </div>
<% end %>
